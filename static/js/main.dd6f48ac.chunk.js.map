{"version":3,"sources":["Components/Section/Section.js","Components/ContactForm/ContactForm.js","Components/ContactItem/ContactItem.js","Components/Contacts/Contacts.js","App.js","index.js"],"names":["H2","styled","h2","SectionDiv","div","Section","title","children","defaultProps","Form","form","Label","label","LabelSpan","span","Input","input","Button","button","formInitialState","name","number","ContactForm","OnAddContact","useState","setForm","handlerInputChange","e","target","value","prev","autoComplete","onSubmit","preventDefault","singleContact","id","uuidv4","type","onChange","P","p","ContactItem","OnDeleteContact","onClick","ContactsDiv","Ul","ul","Li","li","Contacts","props","OnAddFilter","this","OnGetFilter","contacts","map","contact","index","Component","App","setContacts","filter","setFilter","useEffect","persistedContacts","localStorage","getItem","JSON","parse","setItem","stringify","objContact","every","includes","alert","length","toLowerCase","idContact","query","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dd6f48ac.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst H2 = styled.h2`\n  margin-top: 0;\n  margin-bottom: 20px;\n\n  text-align: center;\n\n  font-size: 18px;\n  font-weight: 600;\n  line-height: 22px;\n`;\nconst SectionDiv = styled.div`\n  /* display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: space-between; */\n`;\n\nconst Section = ({ title, children }) => {\n  return (\n    <div>\n      <H2>{title}</H2>\n      <SectionDiv>{children}</SectionDiv>\n    </div>\n  );\n};\n\nexport default Section;\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.element.isRequired,\n};\n\nSection.defaultProps = {\n  title: \"Title template\",\n};\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport styled from \"styled-components\";\n\nconst Form = styled.form`\n  display: block;\n  margin-top: 0;\n  margin-bottom: 20px;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 25px;\n\n  width: 342px;\n  background: #fff;\n  border: 2px solid #212121;\n  border-radius: 10px;\n`;\nconst Label = styled.label`\n  display: block;\n  margin-top: 0;\n  margin-bottom: 15px;\n\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 17px;\n`;\nconst LabelSpan = styled.span`\n  display: block;\n  margin-left: 15px;\n`;\nconst Input = styled.input`\n  display: block;\n  margin: 0 auto;\n  padding-left: 10px;\n  width: 280px;\n  height: 40px;\n  background: #fff;\n  border: 1px solid #b3b3b3;\n  border-radius: 10px;\n`;\nconst Button = styled.button`\n  display: block;\n  margin: 0 auto;\n\n  padding: 11px 78px;\n\n  min-width: 240px;\n  min-height: 44px;\n\n  border-radius: 10px;\n  border: 2px solid transparent;\n\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.22;\n\n  text-align: center;\n  text-transform: uppercase;\n\n  cursor: pointer;\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    background-image 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  background-image: linear-gradient(47.73deg, #6368e5 15.48%, #b884f3 81.25%);\n  background-position: center;\n  background-size: calc(100% + 4px);\n\n  color: #ffffff;\n\n  &:hover,\n  &:focus {\n    border: 2px solid #6368e5;\n    color: #6368e5;\n    background-image: none;\n    background-color: #ffffff;\n  }\n`;\n\nconst formInitialState = {\n  name: \"\",\n  number: \"\",\n};\n\nconst ContactForm = ({ OnAddContact }) => {\n  const [{ name, number }, setForm] = useState({ ...formInitialState });\n\n  const handlerInputChange = (e) => {\n    const { name, value } = e.target;\n    setForm((prev) => ({ ...prev, [name]: value }));\n  };\n\n  const handlerSubmit = (e) => {\n    e.preventDefault();\n    const singleContact = {\n      id: uuidv4(),\n      name: name,\n      number: number,\n    };\n    OnAddContact(singleContact);\n    setForm({ ...formInitialState });\n  };\n\n  return (\n    <Form autoComplete=\"on\" onSubmit={handlerSubmit}>\n      <Label>\n        <LabelSpan>Name</LabelSpan>\n        <Input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handlerInputChange}\n        />\n      </Label>\n      <Label>\n        <LabelSpan>Number</LabelSpan>\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handlerInputChange}\n        />\n      </Label>\n      <Button type=\"submit\">Add contact</Button>\n    </Form>\n  );\n};\n\nexport default ContactForm;\n\nContactForm.propTypes = {\n  OnAddContact: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\n\nconst P = styled.p`\n  display: block;\n  margin-top: 0;\n  margin-bottom: 0;\n\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 17px;\n`;\nconst Button = styled.button`\n  display: block;\n  width: 23px;\n  height: 23px;\n  border: 2px solid transparent;\n  border-radius: 50%;\n\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 17px;\n\n  cursor: pointer;\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    background-image 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  background-image: linear-gradient(47.73deg, #6368e5 15.48%, #b884f3 81.25%);\n  background-position: center;\n  background-size: calc(100% + 4px) calc(100% + 4px);\n\n  color: #ffffff;\n\n  &:hover,\n  &:focus {\n    border: 2px solid #6368e5;\n    color: #6368e5;\n    background-image: none;\n    background-color: #ffffff;\n  }\n`;\n\nconst ContactItem = ({ id, name, number, OnDeleteContact }) => {\n  return (\n    <>\n      <P>\n        {name}: {number}\n      </P>\n      <Button\n        type=\"button\"\n        onClick={(e) => {\n          OnDeleteContact(id);\n        }}\n      >\n        x\n      </Button>\n    </>\n  );\n};\n\nexport default ContactItem;\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  OnDeleteContact: PropTypes.func.isRequired,\n};\n","import React, { Component } from \"react\";\nimport ContactItem from \"../ContactItem/ContactItem\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst ContactsDiv = styled.div`\n  margin-top: 0;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 25px;\n\n  width: 342px;\n  background: #fff;\n  border: 2px solid #212121;\n  border-radius: 10px;\n`;\n\nconst Label = styled.label`\n  display: block;\n  margin-top: 0;\n  margin-bottom: 15px;\n\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 17px;\n`;\nconst LabelSpan = styled.span`\n  display: block;\n  margin-left: 15px;\n`;\nconst Input = styled.input`\n  display: block;\n  margin: 0 auto;\n  padding-left: 10px;\n  width: 280px;\n  height: 40px;\n  background: #fff;\n  border: 1px solid #b3b3b3;\n  border-radius: 10px;\n`;\nconst Ul = styled.ul`\n  padding: 0;\n  list-style: none;\n`;\nconst Li = styled.li`\n  display: flex;\n  padding: 5px 10px;\n  &:not(:last-child) {\n    margin-bottom: 15px;\n  }\n\n  flex-wrap: nowrap;\n  align-items: center;\n  justify-content: space-between;\n  background-color: #f1f1f1;\n\n  border: 1px solid #b3b3b3;\n  border-radius: 10px;\n`;\n\nclass Contacts extends Component {\n  handlerInputChange = (e) => {\n    this.props.OnAddFilter(e.target.value);\n  };\n  render() {\n    return (\n      <ContactsDiv>\n        <Label>\n          <LabelSpan>Find contacts by name</LabelSpan>\n          <Input\n            type=\"text\"\n            name=\"search\"\n            value={this.props.OnGetFilter()}\n            onChange={this.handlerInputChange}\n          />\n        </Label>\n        <Ul>\n          {this.props.contacts().map((contact, index) => (\n            <Li key={contact.id}>\n              <ContactItem\n                {...contact}\n                index={index}\n                OnDeleteContact={this.props.OnDeleteContact}\n              />\n            </Li>\n          ))}\n        </Ul>\n      </ContactsDiv>\n    );\n  }\n}\n\nexport default Contacts;\n\nContacts.propTypes = {\n  OnAddFilter: PropTypes.func.isRequired,\n  OnGetFilter: PropTypes.func.isRequired,\n  contacts: PropTypes.func.isRequired,\n  OnDeleteContact: PropTypes.func.isRequired,\n};\n","import React, { useState, useEffect } from \"react\";\n\nimport Section from \"./Components/Section/Section\";\nimport ContactForm from \"./Components/ContactForm/ContactForm\";\nimport Contacts from \"./Components/Contacts/Contacts\";\n\nconst App = () => {\n  const [contacts, setContacts] = useState([]);\n  const [filter, setFilter] = useState(\"\");\n\n  useEffect(() => {\n    const persistedContacts = localStorage.getItem(\"contacts\");\n    if (persistedContacts) {\n      setContacts(JSON.parse(persistedContacts));\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  });\n  // const componentDidMount() {\n  //   const persistedContacts = localStorage.getItem(\"contacts\");\n  //   if (persistedContacts) {\n  //     this.setState({ contacts: JSON.parse(persistedContacts) });\n  //   }\n  // }\n\n  // componentDidUpdate(prevProps, prevState) {\n  //   if (prevState.contacts !== this.state.contacts) {\n  //     localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n  //   }\n  // }\n\n  const addContact = (objContact) => {\n    const { name } = objContact;\n    if (contacts.every((contact) => !contact.name.includes(name))) {\n      setContacts((prev) => [...prev, objContact]);\n    } else alert(`${name} is already in contacts`);\n  };\n\n  const deleteContact = (idContact) => {\n    setContacts((prev) => [\n      ...prev.filter((contact) => contact.id !== idContact),\n    ]);\n  };\n  const addFilter = (query) => {\n    setFilter(query);\n  };\n  const getFilter = () => filter;\n\n  const filtredContacts = () => {\n    if (filter.length > 0) {\n      return contacts.filter((contact) =>\n        contact.name.toLowerCase().includes(filter.toLowerCase())\n      );\n    } else return contacts;\n  };\n\n  return (\n    <>\n      <Section title={\"Phonebook\"}>\n        <ContactForm OnAddContact={addContact} />\n      </Section>\n      <Section title={\"Contacts\"}>\n        <Contacts\n          contacts={filtredContacts}\n          OnDeleteContact={deleteContact}\n          OnAddFilter={addFilter}\n          OnGetFilter={getFilter}\n        />\n      </Section>\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}